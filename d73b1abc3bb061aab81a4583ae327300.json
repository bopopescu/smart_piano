{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\coltg\\\\piano_ear_training\\\\React_Projects\\\\p-ear-training2\\\\smartPiano\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\coltg\\\\piano_ear_training\\\\React_Projects\\\\p-ear-training2\\\\smartPiano\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\coltg\\\\piano_ear_training\\\\React_Projects\\\\p-ear-training2\\\\smartPiano\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\coltg\\\\piano_ear_training\\\\React_Projects\\\\p-ear-training2\\\\smartPiano\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\coltg\\\\piano_ear_training\\\\React_Projects\\\\p-ear-training2\\\\smartPiano\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\coltg\\\\piano_ear_training\\\\React_Projects\\\\p-ear-training2\\\\smartPiano\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\coltg\\\\piano_ear_training\\\\React_Projects\\\\p-ear-training2\\\\smartPiano\\\\src\\\\Views\\\\ScalePlayer.js\";\nimport React from 'react';\nimport './ScalePlayer.css';\nimport { Piano, MidiNumbers } from 'react-piano';\nimport FormControl from '@material-ui/core/FormControl';\nimport DimensionsProvider from '../piano_tools/DimensionProvider.js';\nimport SoundfontProvider from '../piano_tools/SoundfontProvider.js';\nimport classNames from 'classnames';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport ScaleSelect from './ScaleSelect.js';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Select from '@material-ui/core/Select';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nvar audioContext = new (window.AudioContext || window.webkitAudioContext)();\nvar soundfontHostname = 'https://d1pzp51pvbm36p.cloudfront.net';\nvar firstHalf = 5;\nvar secondHalf = 12;\n\nvar ScalePlayer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ScalePlayer, _React$Component);\n\n  function ScalePlayer(props) {\n    var _this;\n\n    _classCallCheck(this, ScalePlayer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScalePlayer).call(this, props));\n\n    _this.handleMajorMinor = function () {\n      _this.setState({\n        isMajor: !_this.state.isMajor,\n        isMinor: !_this.state.isMinor\n      });\n    };\n\n    _this.handleScaleChange = function (event) {\n      console.log(event.target.value);\n\n      _this.setState({\n        chosenScale: event.target.value\n      }, function () {\n        console.log(_this.state.chosenScale);\n      });\n    };\n\n    _this.handleScaleClick = function (event) {\n      console.log(_this.state.chosenScale);\n      axios.post('http://127.0.0.1:5000/getScaleStart', {\n        selectedScale: _this.state.chosenScale,\n        isMajor: _this.state.isMajor\n      }).then(function (response) {\n        console.log(response);\n        var res = \"\";\n\n        if (response.data.length === 4) {\n          res = response.data[1];\n        } else if (response.data.length === 5) {\n          res = response.data[1].concat(response.data[2]);\n        }\n\n        var newRes = Number(res);\n        console.log(newRes);\n\n        _this.setState({\n          startNum: newRes\n        });\n\n        _this.createScale(_this.state.startNum);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.createScale = function (startNumber) {\n      //Follow W-W-H-W-W-W-H for major \n      //Follow W-H-W-W-H-1.5-W for harmonic minor\n      var pattern = [];\n      var arpeggiatedPattern = [0, 2, 4, 7, 12, 14, 16, 19, 24];\n      _this.state.isMajor ? _this.setState({\n        testScale: [0, 2, 4, 5, 7, 9, 11, 12, 14, 16, 17, 19, 21, 23, 24]\n      }) : _this.setState({\n        testScale: [0, 2, 3, 5, 7, 8, 11, 12, 14, 15, 17, 19, 20, 23, 24]\n      });\n\n      var scaled = _this.state.testScale.map(function (number) {\n        return [startNumber + number + 35, startNumber + number + 35 + 12];\n      });\n\n      var rscaled = scaled.slice().reverse();\n      var completeScale = scaled.concat(rscaled);\n      var arpeggiated = [];\n\n      for (var i = 0; i < completeScale.length; i = i + 2) {\n        arpeggiated.push(completeScale[i]);\n      }\n\n      console.log(arpeggiated);\n      console.log(completeScale);\n\n      _this.setState({\n        song: completeScale\n      });\n\n      _this.setPlaying(!_this.state.isPlaying);\n    };\n\n    _this.setPlaying = function (value) {\n      _this.setState({\n        isPlaying: value\n      });\n    };\n\n    _this.state = {\n      activeNotesIndex: 0,\n      isPlaying: false,\n      stopAllNotes: function stopAllNotes() {\n        return console.warn('stopAllNotes not yet loaded');\n      },\n      song: [],\n      testScale: [],\n      startNum: 0,\n      isMajor: true,\n      isMinor: false,\n      chosenScale: \"C\",\n      scale: \"\",\n      majorMinor: \"\"\n    };\n    _this.playbackIntervalFn = null;\n    _this.handleScaleClick = _this.handleScaleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleScaleChange = _this.handleScaleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ScalePlayer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      if (prevState.isPlaying !== this.state.isPlaying) {\n        if (this.state.isPlaying) {\n          this.playbackIntervalFn = setInterval(function () {\n            _this2.setState({\n              activeNotesIndex: (_this2.state.activeNotesIndex + 1) % _this2.state.song.length\n            });\n\n            console.log(_this2.state.activeNotesIndex);\n\n            if (_this2.state.activeNotesIndex === _this2.state.song.length - 1) {\n              _this2.setState({\n                isPlaying: false\n              });\n            }\n          }, 250);\n        } else {\n          clearInterval(this.playbackIntervalFn);\n          this.state.stopAllNotes();\n          this.setState({\n            activeNotesIndex: 0\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var noteRange = {\n        first: MidiNumbers.fromNote('c2'),\n        last: MidiNumbers.fromNote('b5')\n      };\n      return React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(DimensionsProvider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, function (_ref) {\n        var containerWidth = _ref.containerWidth,\n            containerHeight = _ref.containerHeight;\n        return React.createElement(SoundfontProvider, {\n          instrumentName: \"acoustic_grand_piano\",\n          audioContext: audioContext,\n          hostname: soundfontHostname,\n          onLoad: function onLoad(_ref2) {\n            var stopAllNotes = _ref2.stopAllNotes;\n            return _this3.setState({\n              stopAllNotes: stopAllNotes\n            });\n          },\n          render: function render(_ref3) {\n            var isLoading = _ref3.isLoading,\n                playNote = _ref3.playNote,\n                stopNote = _ref3.stopNote;\n            return React.createElement(Piano, {\n              activeNotes: _this3.state.isPlaying ? _this3.state.song[_this3.state.activeNotesIndex] : [],\n              noteRange: noteRange,\n              width: containerWidth,\n              playNote: playNote,\n              stopNote: stopNote,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 156\n              },\n              __self: this\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        });\n      })), React.createElement(\"div\", {\n        className: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        className: \"scalesForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        id: \"demo-mutiple-name-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Key\"), React.createElement(Select, {\n        onChange: this.handleScaleChange,\n        value: this.state.chosenScale,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: \"C\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"C\"), React.createElement(MenuItem, {\n        value: \"D\\u266D\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"D\\u266D\"), React.createElement(MenuItem, {\n        value: \"D\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"D\"), React.createElement(MenuItem, {\n        value: \"E\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"E\"), React.createElement(MenuItem, {\n        value: \"F\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"F\"), React.createElement(MenuItem, {\n        value: \"F#/G\\u266D\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"F#/G\\u266D\"), React.createElement(MenuItem, {\n        value: \"G\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"G\"), React.createElement(MenuItem, {\n        value: \"G#/A\\u266D\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"G#/A\\u266D\"), React.createElement(MenuItem, {\n        value: \"A\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"A\"), React.createElement(MenuItem, {\n        value: \"A#/B\\u266D\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"A#/B\\u266D\"), React.createElement(MenuItem, {\n        value: \"B\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"B\"))), React.createElement(FormControl, {\n        className: \"majorMinorForm\",\n        width: \"500px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        id: \"majmin-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Major/Minor\"), React.createElement(Select, {\n        onChange: this.handleMajorMinor,\n        value: this.state.isMajor ? \"Major\" : \"Minor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        disabled: this.state.isMajor,\n        value: \"Major\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Major\"), React.createElement(MenuItem, {\n        disabled: this.state.isMinor,\n        value: \"Minor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"Minor\")))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: classNames('btn', {\n          'btn-outline-info': !this.state.isPlaying,\n          'btn-outline-danger': this.state.isPlaying\n        }),\n        onClick: this.handleScaleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, this.state.isPlaying ? 'Stop' : 'Play Scale')))));\n    }\n  }]);\n\n  return ScalePlayer;\n}(React.Component);\n\nexport default ScalePlayer;\n/*\n  return (\n    <div>\n      <div className=\"text-center\">\n        </div>\n      <div className=\"mt-4\">\n        <SoundfontProvider\n          audioContext={this.props.audioContext}\n          instrumentName=\"acoustic_grand_piano\"\n          hostname={this.props.soundfontHostname}\n          onLoad={({ stopAllNotes }) => this.setState({ stopAllNotes })}\n          render={({ isLoading, playNote, stopNote, stopAllNotes }) => (\n            <DimensionsProvider>\n              {({ containerWidth }) => (\n                <Piano\n                  activeNotes={\n                    this.state.isPlaying ? this.state.song[this.state.activeNotesIndex] : []\n                  }\n                  noteRange={noteRange}\n                  width={containerWidth}\n                  playNote={playNote}\n                  stopNote={stopNote}\n                  disabled={isLoading || !this.state.isPlaying}\n                />\n              )}\n            </DimensionsProvider>\n          )}\n        />\n      </div>\n      <p>Choose Scale</p>\n      <div>\n          <ToggleButtonGroup type=\"radio\" name=\"scale\" onChange={this.handleScaleChange}>\n              <ToggleButton value=\"AMajor\">AMajor</ToggleButton>\n              <ToggleButton defaultChecked value=\"CMajor\">CMajor</ToggleButton>\n              <ToggleButton value=\"CChord\">CChord</ToggleButton>\n          </ToggleButtonGroup>\n      </div>\n      <p>Press Play to see it in action: </p>\n      <div>\n          <button\n             className={classNames('btn', {\n              'btn-outline-info': !this.state.isPlaying,\n              'btn-outline-danger': this.state.isPlaying,\n              })}\n              onClick={() => this.setPlaying(!this.state.isPlaying)}\n          >\n                {this.state.isPlaying ? 'Stop' : 'Play Scale'}\n           </button>\n      </div>\n    </div>\n  );\n}\n}\n*/","map":{"version":3,"sources":["C:\\Users\\coltg\\piano_ear_training\\React_Projects\\p-ear-training2\\smartPiano\\src\\Views\\ScalePlayer.js"],"names":["React","Piano","MidiNumbers","FormControl","DimensionsProvider","SoundfontProvider","classNames","MenuItem","axios","Button","ScaleSelect","InputLabel","Paper","Select","ToggleButtonGroup","ToggleButton","audioContext","window","AudioContext","webkitAudioContext","soundfontHostname","firstHalf","secondHalf","ScalePlayer","props","handleMajorMinor","setState","isMajor","state","isMinor","handleScaleChange","event","console","log","target","value","chosenScale","handleScaleClick","post","selectedScale","then","response","res","data","length","concat","newRes","Number","startNum","createScale","catch","error","startNumber","pattern","arpeggiatedPattern","testScale","scaled","map","number","rscaled","slice","reverse","completeScale","arpeggiated","i","push","song","setPlaying","isPlaying","activeNotesIndex","stopAllNotes","warn","scale","majorMinor","playbackIntervalFn","bind","prevProps","prevState","setInterval","clearInterval","noteRange","first","fromNote","last","containerWidth","containerHeight","isLoading","playNote","stopNote","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './ScalePlayer.css';\nimport {Piano,MidiNumbers} from 'react-piano';\nimport FormControl from '@material-ui/core/FormControl'\nimport DimensionsProvider from '../piano_tools/DimensionProvider.js';\nimport SoundfontProvider from '../piano_tools/SoundfontProvider.js';\nimport classNames from 'classnames'\nimport MenuItem from '@material-ui/core/MenuItem';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button'\nimport ScaleSelect from './ScaleSelect.js'\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Paper from '@material-ui/core/Paper'\nimport Select from '@material-ui/core/Select';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nconst audioContext = new (window.AudioContext || window.webkitAudioContext)();\nconst soundfontHostname = 'https://d1pzp51pvbm36p.cloudfront.net';\n\n\nconst firstHalf = 5\nconst secondHalf = 12\n\nclass ScalePlayer extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        activeNotesIndex: 0,\n        isPlaying: false,\n        stopAllNotes: () => console.warn('stopAllNotes not yet loaded'),\n        song: [],\n        testScale: [],\n        startNum: 0,\n        isMajor: true,\n        isMinor: false,\n        chosenScale: \"C\",\n        scale: \"\",\n        majorMinor: \"\"\n    }\n    this.playbackIntervalFn = null;\n    this.handleScaleClick = this.handleScaleClick.bind(this)\n    this.handleScaleChange = this.handleScaleChange.bind(this)\n  }\n\n  handleMajorMinor = () => {\n    this.setState({\n      isMajor: !this.state.isMajor,\n      isMinor: !this.state.isMinor})\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.isPlaying !== this.state.isPlaying) {\n      if (this.state.isPlaying) {\n        this.playbackIntervalFn = setInterval(() => {\n          this.setState({\n            activeNotesIndex: (this.state.activeNotesIndex + 1) % this.state.song.length,\n          });\n          console.log(this.state.activeNotesIndex)\n          if(this.state.activeNotesIndex === this.state.song.length-1) {\n            this.setState({isPlaying: false})\n          }\n        }, 250);\n      } else {\n        clearInterval(this.playbackIntervalFn);\n        this.state.stopAllNotes();\n        this.setState({\n          activeNotesIndex: 0,\n        });\n      }\n    }\n  }\n  handleScaleChange = (event) => {\n  \n    console.log(event.target.value)\n    this.setState({chosenScale:event.target.value}, () => {\n      console.log(this.state.chosenScale)\n    }) \n    \n  }\n  handleScaleClick = (event) => {\n    console.log(this.state.chosenScale)\n    axios.post('http://127.0.0.1:5000/getScaleStart', {\n      \n      selectedScale : this.state.chosenScale,\n      isMajor: this.state.isMajor\n  })\n  .then((response) => {\n      console.log(response)\n      var res = \"\"\n      if(response.data.length === 4){\n        res = response.data[1]\n      }\n      else if(response.data.length === 5){\n        res = response.data[1].concat(response.data[2])\n\n      }\n      var newRes = Number(res)\n      console.log(newRes)\n      this.setState({startNum : newRes})\n      this.createScale(this.state.startNum)\n  })\n  .catch(function (error) {\n      console.log(error);\n  });\n  \n  \n\n} \n\n  createScale = (startNumber) => {\n    //Follow W-W-H-W-W-W-H for major \n    //Follow W-H-W-W-H-1.5-W for harmonic minor\n    var pattern = []\n    var arpeggiatedPattern = [0,2,4,7,12,14,16,19,24]\n    this.state.isMajor ? this.setState({testScale:[0,2,4,5,7,9,11,12,14,16,17,19,21,23,24]}) : this.setState({testScale : [0,2,3,5,7,8,11,12,14,15,17,19,20,23,24]})\n    \n  \n    var scaled = this.state.testScale.map((number) => [(startNumber+number+35),(startNumber+number+35)+12]);\n    var rscaled = scaled.slice().reverse();\n    var completeScale = scaled.concat(rscaled)\n    var arpeggiated = []\n    for(var i = 0;i <completeScale.length;i=i+2){\n      arpeggiated.push(completeScale[i])\n    }\n    console.log(arpeggiated)\n    console.log(completeScale)\n    this.setState({song:completeScale})\n    this.setPlaying(!this.state.isPlaying)\n  \n    \n  }\n\n  setPlaying = (value) => {\n    this.setState({ isPlaying: value });\n  };\n\n\n  render() {\n    const noteRange = {\n      first: MidiNumbers.fromNote('c2'),\n      last: MidiNumbers.fromNote('b5'),\n    };\n    return(\n      <Paper>\n      <div>\n          <div>\n          <DimensionsProvider>\n            {({ containerWidth, containerHeight }) => (\n              <SoundfontProvider\n                instrumentName=\"acoustic_grand_piano\"\n                audioContext={audioContext}\n                hostname={soundfontHostname}\n                onLoad={({ stopAllNotes }) => this.setState({ stopAllNotes })}\n                render={({ isLoading,playNote,stopNote }) => (\n                  <Piano\n                  \n                  activeNotes={\n                    this.state.isPlaying ? this.state.song[this.state.activeNotesIndex] : []\n                  }\n                    noteRange={noteRange}\n                    width={containerWidth}\n                    playNote={playNote}\n                    stopNote={stopNote}\n                  />\n                  \n                )}\n              />\n            )}\n          </DimensionsProvider>\n        </div>\n       <div className = \"body\">\n        <div>\n        <FormControl className = \"scalesForm\">\n              <InputLabel id=\"demo-mutiple-name-label\">Key</InputLabel>\n              <Select\n              onChange = {this.handleScaleChange}\n              value = {this.state.chosenScale}\n              >\n              <MenuItem value = \"C\">C</MenuItem>\n              <MenuItem value = \"D♭\">D♭</MenuItem>\n              <MenuItem value = \"D\">D</MenuItem>\n              <MenuItem value = \"E\">E</MenuItem>\n              <MenuItem value = \"F\">F</MenuItem>\n              <MenuItem value = \"F#/G♭\">F#/G♭</MenuItem>\n              <MenuItem value = \"G\">G</MenuItem>\n              <MenuItem value = \"G#/A♭\">G#/A♭</MenuItem>\n              <MenuItem value = \"A\">A</MenuItem>\n              <MenuItem value = \"A#/B♭\">A#/B♭</MenuItem>\n              <MenuItem value = \"B\">B</MenuItem>  \n              </Select>\n              </FormControl>\n              <FormControl className = \"majorMinorForm\" width = \"500px\">\n              <InputLabel id=\"majmin-label\">Major/Minor</InputLabel>\n              <Select\n             \n              onChange = {this.handleMajorMinor}\n              value = {this.state.isMajor ? \"Major\" : \"Minor\"}\n              >  \n            \n              <MenuItem disabled = {this.state.isMajor} value = \"Major\">Major</MenuItem>\n              <MenuItem disabled = {this.state.isMinor} value = \"Minor\">Minor</MenuItem>\n              </Select>\n             </FormControl>\n            \n          \n        </div>\n        \n        <div>\n            <Button\n               className={classNames('btn', {\n                'btn-outline-info': !this.state.isPlaying,\n                'btn-outline-danger': this.state.isPlaying,\n                })}\n                onClick={this.handleScaleClick}\n                >\n                  {this.state.isPlaying ? 'Stop' : 'Play Scale'}\n             </Button>\n        </div>\n        </div>\n  </div>\n  </Paper>\n    )}\n                }\n  export default ScalePlayer;\n  /*\n    return (\n      <div>\n        <div className=\"text-center\">\n\n\n        </div>\n        <div className=\"mt-4\">\n          <SoundfontProvider\n            audioContext={this.props.audioContext}\n            instrumentName=\"acoustic_grand_piano\"\n            hostname={this.props.soundfontHostname}\n            onLoad={({ stopAllNotes }) => this.setState({ stopAllNotes })}\n            render={({ isLoading, playNote, stopNote, stopAllNotes }) => (\n              <DimensionsProvider>\n                {({ containerWidth }) => (\n                  <Piano\n                    activeNotes={\n                      this.state.isPlaying ? this.state.song[this.state.activeNotesIndex] : []\n                    }\n                    noteRange={noteRange}\n                    width={containerWidth}\n                    playNote={playNote}\n                    stopNote={stopNote}\n                    disabled={isLoading || !this.state.isPlaying}\n                  />\n                )}\n              </DimensionsProvider>\n            )}\n          />\n        </div>\n        <p>Choose Scale</p>\n        <div>\n            <ToggleButtonGroup type=\"radio\" name=\"scale\" onChange={this.handleScaleChange}>\n                <ToggleButton value=\"AMajor\">AMajor</ToggleButton>\n                <ToggleButton defaultChecked value=\"CMajor\">CMajor</ToggleButton>\n                <ToggleButton value=\"CChord\">CChord</ToggleButton>\n            </ToggleButtonGroup>\n        </div>\n        <p>Press Play to see it in action: </p>\n        <div>\n            <button\n               className={classNames('btn', {\n                'btn-outline-info': !this.state.isPlaying,\n                'btn-outline-danger': this.state.isPlaying,\n                })}\n                onClick={() => this.setPlaying(!this.state.isPlaying)}\n            >\n                  {this.state.isPlaying ? 'Stop' : 'Play Scale'}\n             </button>\n        </div>\n      </div>\n    );\n  }\n}\n*/\n\n"]},"metadata":{},"sourceType":"module"}